export const BTC100KABI = [
  {
    inputs: [
      { internalType: "string[]", name: "_name", type: "string[]" },
      { internalType: "string[]", name: "_symbol", type: "string[]" },
      { internalType: "uint256", name: "_expiredTime", type: "uint256" },
      { internalType: "address", name: "_collateralToken", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AmountMustBePositive", type: "error" },
  { inputs: [], name: "ArrayLengthMismatch", type: "error" },
  { inputs: [], name: "CloseExistingPositionFirst", type: "error" },
  { inputs: [], name: "CollateralTransferFailed", type: "error" },
  { inputs: [], name: "EnforcedPause", type: "error" },
  { inputs: [], name: "ExpectedPause", type: "error" },
  { inputs: [], name: "FeeTooHigh", type: "error" },
  { inputs: [], name: "FeeTransferFailed", type: "error" },
  { inputs: [], name: "InsufficientBalance", type: "error" },
  { inputs: [], name: "InsufficientInsuranceFund", type: "error" },
  { inputs: [], name: "InsufficientTokenBalance", type: "error" },
  { inputs: [], name: "InsuranceFundWithdrawalFailed", type: "error" },
  { inputs: [], name: "InvalidLeverage", type: "error" },
  { inputs: [], name: "InvalidPenalty", type: "error" },
  { inputs: [], name: "InvalidPercentage", type: "error" },
  { inputs: [], name: "InvalidPositionSize", type: "error" },
  { inputs: [], name: "InvalidSide", type: "error" },
  { inputs: [], name: "InvalidThreshold", type: "error" },
  { inputs: [], name: "InvalidWarningThreshold", type: "error" },
  { inputs: [], name: "InvalidWinningOutcome", type: "error" },
  { inputs: [], name: "MarketDoesNotExist", type: "error" },
  { inputs: [], name: "MarketNotActive", type: "error" },
  { inputs: [], name: "MarketNotReadyForResolution", type: "error" },
  { inputs: [], name: "MarketNotResolved", type: "error" },
  { inputs: [], name: "NoOpenPosition", type: "error" },
  { inputs: [], name: "NoTokensToRedeem", type: "error" },
  { inputs: [], name: "NotEligibleForLiquidation", type: "error" },
  { inputs: [], name: "NotOrderOwner", type: "error" },
  { inputs: [], name: "OrderNotActive", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "PositionAlreadyLiquidated", type: "error" },
  { inputs: [], name: "PositionSizeTooSmall", type: "error" },
  { inputs: [], name: "PositionWouldBeLiquidated", type: "error" },
  { inputs: [], name: "PriceMustBePositive", type: "error" },
  { inputs: [], name: "ReentrancyGuardReentrantCall", type: "error" },
  { inputs: [], name: "RemainingCollateralTransferFailed", type: "error" },
  { inputs: [], name: "SizeMustBePositive", type: "error" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "by", type: "address" },
    ],
    name: "EmergencyPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "by", type: "address" },
    ],
    name: "EmergencyUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTotal",
        type: "uint256",
      },
    ],
    name: "InsuranceFundDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "InsuranceFundFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTotal",
        type: "uint256",
      },
    ],
    name: "InsuranceFundWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPenalty",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPenalty",
        type: "uint256",
      },
    ],
    name: "LiquidationPenaltyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "LiquidationThresholdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "question",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "resolutionTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "conditionalTokensContract",
        type: "address",
      },
    ],
    name: "MarketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalVolume",
        type: "uint256",
      },
    ],
    name: "MarketResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldSize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newSize",
        type: "uint256",
      },
    ],
    name: "MinPositionSizeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "closedAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "realizedPnl",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainingSize",
        type: "uint256",
      },
    ],
    name: "PartialPositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: false,
        internalType: "uint256",
        name: "realizedPnl",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalCollateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
    ],
    name: "PositionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "healthPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentPrice",
        type: "uint256",
      },
    ],
    name: "PositionHealthWarning",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralLost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidationPenalty",
        type: "uint256",
      },
    ],
    name: "PositionLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: false,
        internalType: "enum Fluxoria.PositionSide",
        name: "side",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outcome",
        type: "uint256",
      },
    ],
    name: "PositionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "user", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "marketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outcome",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      { indexed: false, internalType: "bool", name: "isBuy", type: "bool" },
    ],
    name: "TokensTraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newThreshold",
        type: "uint256",
      },
    ],
    name: "WarningThresholdUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "INSURANCE_FEE_DENOMINATOR",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256[]", name: "_marketIds", type: "uint256[]" },
      { internalType: "uint256[]", name: "_prices", type: "uint256[]" },
    ],
    name: "batchUpdatePrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user", type: "address" }],
    name: "canLiquidate",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_orderId", type: "uint256" }],
    name: "cancelOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "checkPositionHealth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_percentage", type: "uint256" }],
    name: "closePartialPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "conditionalTokens",
    outputs: [
      { internalType: "contract ConditionalTokens", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "_outcome", type: "uint256" },
      { internalType: "uint256", name: "_amount", type: "uint256" },
      { internalType: "uint256", name: "_maxPrice", type: "uint256" },
    ],
    name: "createBuyOrder",
    outputs: [{ internalType: "uint256", name: "orderId", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "_outcome", type: "uint256" },
      { internalType: "uint256", name: "_amount", type: "uint256" },
      { internalType: "uint256", name: "_minPrice", type: "uint256" },
    ],
    name: "createSellOrder",
    outputs: [{ internalType: "uint256", name: "orderId", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInsuranceFund",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_marketId", type: "uint256" }],
    name: "getMarket",
    outputs: [
      {
        components: [
          { internalType: "string", name: "question", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "uint256", name: "resolutionTime", type: "uint256" },
          {
            internalType: "enum Fluxoria.MarketState",
            name: "state",
            type: "uint8",
          },
          { internalType: "uint256", name: "currentPrice", type: "uint256" },
          { internalType: "uint256", name: "totalVolume", type: "uint256" },
          {
            internalType: "address",
            name: "conditionalTokensContract",
            type: "address",
          },
          { internalType: "bool", name: "isResolved", type: "bool" },
        ],
        internalType: "struct Fluxoria.Market",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "_outcome", type: "uint256" },
    ],
    name: "getMarketDepth",
    outputs: [
      { internalType: "uint256", name: "bestBuyPrice", type: "uint256" },
      { internalType: "uint256", name: "bestSellPrice", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_marketId", type: "uint256" }],
    name: "getMarketOrders",
    outputs: [
      { internalType: "uint256[]", name: "buyOrders", type: "uint256[]" },
      { internalType: "uint256[]", name: "sellOrders", type: "uint256[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketParameters",
    outputs: [
      {
        internalType: "uint256",
        name: "_liquidationThreshold",
        type: "uint256",
      },
      { internalType: "uint256", name: "_liquidationPenalty", type: "uint256" },
      { internalType: "uint256", name: "_insuranceFundFee", type: "uint256" },
      { internalType: "uint256", name: "_warningThreshold", type: "uint256" },
      { internalType: "uint256", name: "_minPositionSize", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_orderId", type: "uint256" }],
    name: "getOrder",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "id", type: "uint256" },
          { internalType: "address", name: "user", type: "address" },
          { internalType: "uint256", name: "marketId", type: "uint256" },
          { internalType: "uint256", name: "outcome", type: "uint256" },
          {
            internalType: "enum OrderBook.OrderType",
            name: "orderType",
            type: "uint8",
          },
          { internalType: "uint256", name: "amount", type: "uint256" },
          { internalType: "uint256", name: "filledAmount", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          {
            internalType: "enum OrderBook.OrderStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct OrderBook.Order",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrderBookAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_user", type: "address" },
      { internalType: "uint256", name: "_outcome", type: "uint256" },
    ],
    name: "getOutcomeBalance",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user", type: "address" }],
    name: "getPositionHealth",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address[]", name: "_users", type: "address[]" }],
    name: "getPositionsAtRisk",
    outputs: [
      { internalType: "address[]", name: "atRiskUsers", type: "address[]" },
      {
        internalType: "uint256[]",
        name: "healthPercentages",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_user", type: "address" }],
    name: "getUserOrders",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user", type: "address" }],
    name: "getUserPosition",
    outputs: [
      {
        components: [
          {
            internalType: "enum Fluxoria.PositionSide",
            name: "side",
            type: "uint8",
          },
          { internalType: "uint256", name: "size", type: "uint256" },
          { internalType: "uint256", name: "collateral", type: "uint256" },
          { internalType: "uint256", name: "entryPrice", type: "uint256" },
          { internalType: "uint256", name: "leverage", type: "uint256" },
          { internalType: "uint256", name: "marketId", type: "uint256" },
          { internalType: "uint256", name: "outcome", type: "uint256" },
        ],
        internalType: "struct Fluxoria.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "insuranceFund",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "insuranceFundFee",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "user", type: "address" }],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "liquidatedUsers",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationPenalty",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationThreshold",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "markets",
    outputs: [
      { internalType: "string", name: "question", type: "string" },
      { internalType: "string", name: "description", type: "string" },
      { internalType: "uint256", name: "resolutionTime", type: "uint256" },
      {
        internalType: "enum Fluxoria.MarketState",
        name: "state",
        type: "uint8",
      },
      { internalType: "uint256", name: "currentPrice", type: "uint256" },
      { internalType: "uint256", name: "totalVolume", type: "uint256" },
      {
        internalType: "address",
        name: "conditionalTokensContract",
        type: "address",
      },
      { internalType: "bool", name: "isResolved", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minPositionSize",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Fluxoria.PositionSide",
        name: "_side",
        type: "uint8",
      },
      { internalType: "uint256", name: "_leverage", type: "uint256" },
      { internalType: "uint256", name: "_size", type: "uint256" },
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "_outcome", type: "uint256" },
    ],
    name: "openPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "orderBook",
    outputs: [
      { internalType: "contract OrderBook", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "_outcome", type: "uint256" },
    ],
    name: "redeemTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "finalPrice", type: "uint256" },
    ],
    name: "resolveMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_newFee", type: "uint256" }],
    name: "setInsuranceFundFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_newPenalty", type: "uint256" }],
    name: "setLiquidationPenalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_newThreshold", type: "uint256" },
    ],
    name: "setLiquidationThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_newSize", type: "uint256" }],
    name: "setMinPositionSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_newThreshold", type: "uint256" },
    ],
    name: "setWarningThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "_outcome", type: "uint256" },
      { internalType: "uint256", name: "_amount", type: "uint256" },
      { internalType: "bool", name: "_isBuy", type: "bool" },
    ],
    name: "tradeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_marketId", type: "uint256" },
      { internalType: "uint256", name: "newPrice", type: "uint256" },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "", type: "address" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "userOutcomeBalances",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "userPositions",
    outputs: [
      {
        internalType: "enum Fluxoria.PositionSide",
        name: "side",
        type: "uint8",
      },
      { internalType: "uint256", name: "size", type: "uint256" },
      { internalType: "uint256", name: "collateral", type: "uint256" },
      { internalType: "uint256", name: "entryPrice", type: "uint256" },
      { internalType: "uint256", name: "leverage", type: "uint256" },
      { internalType: "uint256", name: "marketId", type: "uint256" },
      { internalType: "uint256", name: "outcome", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warningThreshold",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "_amount", type: "uint256" }],
    name: "withdrawInsuranceFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawOrderBookFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
